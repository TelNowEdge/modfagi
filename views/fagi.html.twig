{% include '@telnowedge/js/destination.js.twig' %}
{% import '@telnowedge/Form/macro/usedBy.html.twig' as macro %}

<link rel="stylesheet" href="assets/modfagi/css/modfagi.css">

<div class="fpbx-container container-fluid">
  <div class="row">
    <div class="col-sm-12">
      <div class="display no-border">
        <div class="container-fluid">
          <div class="section-title">
            <div class="row">
              <div class="form-group">
                <h3>
                  {{ 'Fagi' | fpbxtrans }}
                </h3>
              </div>
            </div>
            {{ macro.usedBy(usedBy) }}
          </div>
          <div class="section">
            <form
              class="popover-form fpbx-submit"
              name="frm_fagi"
              method="post"
              action=""
              data-fpbx-delete="{{ id is null ? '' : 'config.php?display=fagi&id=' ~ id ~ '&action=del' }}"
            >
              {{ form_widget(form) }}
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
 $(document).ready(() => {
   const reOrder = (i, e) => {
     $(e)
       .find('.form-control')
       .each((j, x) => {
         $(x).attr('id', $(x).attr('id').replace(/_\d+_/, `_${i}_`));
         $(x).attr('name', $(x).attr('name').replace(/\[\d+\]/, `[${i}]`));
       });

     $(`#fagi_fagiResults_${i}_goto_Category`)
       .unbind()
     ;

     processForm(`#fagi_fagiResults_${i}_goto_Category`, `#fagi_fagiResults_${i}_goto_Destination`);
   };

   $('#fagi_fagiResults')
     .sortable({
       connectWith: '.element-container',
       axis: 'y',
       opacity: 0.75,
       update: (e, x) => {
         $('#fagi_fagiResults')
           .children('.element-container')
           .each(reOrder)
         ;
       }
     });
 });
</script>

<script type="text/javascript">
 $(document).ready(() => {
   $('#duplicate').on('click', () => {
     $('<input />', {
       name: 'duplicate',
       value: true,
       type: 'hidden',
       class: 'hidden'
     })
       .appendTo('form.fpbx-submit')
     ;
   });

   $('.used-by > [data-toggle="popover"]').popover();
 });
</script>

<script type="text/javascript">
 $(document).ready(() => {
   addDeleteButton();

   $('#fagi_fagiResults')
     .children('.element-container')
     .each((i, x) => {
       /* processForm is an helper defined by freepbx-base */
       processForm(`#fagi_fagiResults_${i}_goto_Category`, `#fagi_fagiResults_${i}_goto_Destination`);
     });

   processForm('#fagi_fallback_Category', '#fagi_fallback_Destination');
 });
</script>

<script type="text/javascript">
 $(document).ready(() => {
   let maxId = 0;
   $('div[data-child]')
     .each((i, e) => {
       const id = $(e)
         .attr('id')
         .replace(/.*_(\d+)/, "$1")
       ;

       maxId = maxId < id ? id : maxId;
     });

   $('#fagi_fagiResults')
     .parents('.form-group')
     .find('label.control-label')
     .eq(0)
     .parent()
     .append(
       $('<div />', {
         class: 'row',
       }).append(
         $('<a />', {
           class: 'btn btn-success tne-add-destination',
         }).append(
           $('<i />', {
             class: 'fa fa-plus'
           })
         ).append(
           ' Add destination'
         ).on('click', () => {
           maxId++
           addDestination(maxId);
           addDeleteButton();
           processForm(`#fagi_fagiResults_${maxId}_goto_Category`, `#fagi_fagiResults_${maxId}_goto_Destination`);
         })
       )
     )
   ;
 });
</script>

<!-- Prototype Form -->
<script type="text/javascript">
 const addDestination = (maxId) => {
   let prototype = $('#fagi_fagiResults')
     .data('prototype')
     .replace(/__name__/g, maxId)
   ;

   $('#fagi_fagiResults')
     .append(
       $('<div />', {
         class: 'element-container'
       }).append(
         $('<div />', {
           class: 'row'
         }).append(
           $('<div />', {
             class: 'col-md-12'
           }).append(
             $('<div />', {
               class: 'row'
             }).append(prototype)
           )
         )
       )
     )
   ;
 };

 const addDeleteButton = () => {
   $('div[data-child]')
     .each((i, e) => {
       const buttonIsAdded = $(e).find('[data-delete]').length;
       if (buttonIsAdded !== 0) {
         return; // e.g. continue
       }
       const elem = $(e);

       elem
         .append(
           $('<div />', {
             class: 'element-container',
             attr: {
               'data-delete': true
             }
           }).append(
             $('<div />', {
               class: 'row'
             })
           ).append(
             $('<a />', {
               class: 'btn btn-danger'
             }).append(
               $('<i />', {
                 class: 'fa fa-minus-circle'
               })
             ).append(
               ' Delete'
             ).on('click', (e) => {
               removePrefix(elem.closest('.element-container'));
             })
           )
         );
     });
 };

 const removePrefix = (elem) => {
   elem.remove();
 };
</script>
